{"version":3,"sources":["components/games/Flip/index.js","components/games/Flip/Settings.js","components/games/Flip/WinLoseModal.js","static/coinflip_win.wav","static/coinflip_lose.wav","static/coinflip_space.wav","components/games/Dice/index.js","components/games/Dice/Settings.js","components/games/Dice/WinLoseModal.js","static/dice_win.wav","static/dice_lose.wav","static/dice_space.wav","utils/config.js","actions/types.js","utils/interact.js","components/layout/Navbar.js","components/layout/WinnersAndPayout.js","components/layout/Games.js","components/layout/Description.js","components/layout/Landing.js","components/layout/NotFound.js","reducers/auth.js","reducers/game.js","reducers/index.js","utils/api.js","utils/setAuthToken.js","store.js","App.js","reportWebVitals.js","index.js","actions/auth.js","actions/game.js"],"names":["Win","Audio","win_effect","Lose","lose_effect","Space","space_effect","connect","state","isAuthenticated","auth","game","login","saveWinnerData","theme","useTheme","isDesktop","useMediaQuery","breakpoints","up","Tx","require","Transaction","BSC_FORK","default","forCustomChain","name","networkId","chainId","url","useState","walletAddress","setWallet","selected","setSelected","betType","setBetType","betAmount","setBetAmount","isWin","setIsWin","React","open","setOpen","mute","setMute","undefined","web3","setWeb3","contract","setContract","setChainId","console","log","useEffect","a","getWeb3","getContract","getCurrentWalletConnected","address","window","ethereum","request","method","fetchData","getNonce","eth","getTransactionCount","config","owner","saveCurrentData","data","payout","connectWalletPressed","connectWallet","walletResponse","addWalletListener","success","on","accounts","length","setMinValue","MinButton","onClick","sx","backgroundColor","ml","HeadColor","withStyles","root","fontSize","textAlign","background","WebkitBackgroundClip","WebkitTextFillColor","Typography","TailColor","classes","makeStyles","borderColor","color","width","useStyles","handleClickOpen","className","borderRadius","height","p","maxWidth","direction","mt","justifyContent","flexWrap","padding","src","alt","style","id","onClose","value","item","container","xs","md","type","onChange","event","target","InputProps","endAdornment","fullWidth","mb","methods","Bet","utils","toWei","toString","send","from","play","currentType","Math","random","privateKey","Buffer","owner_privatekey","count","rawTx","nonce","toHex","gasPrice","gasLimit","to","tx","sign","serializedTx","serialize","sendSignedTransaction","variant","size","startIcon","fontWight","my","handleClose","BootstrapDialog","styled","Dialog","spacing","BootstrapDialogTitle","props","children","other","m","position","right","top","palette","grey","mr","margin","marginTop","dividers","gutterBottom","autoFocus","WinLoseModal","zIndex","setValue","track","setTrack","betChance","setBetChance","multiplier","setMultiplier","winValue","setWinValue","getY","x","handleChange","opacity","slider","button","CustomizedSlider","Slider","setBetDirection","e","toFixed","v_value","readOnly","mx","border","fontWeight","defaultValue","valueLabelDisplay","marks","newValue","fontColor","randomValue","floor","bsc_test","bsc_main","contractAddress","LOGIN_SUCCESS","LOGOUT","SET_TOP_WINNERS","SET_TOTAL_PAYOUT","contractABI","_chainId","location","reload","Web3","currentProvider","Contract","addressArray","obj","status","message","href","rel","logout","authLinks","Button","marginRight","String","substring","guestLinks","fontFamily","Stack","top_winners","total_payout","getTopWinners","getTotalPayout","Grid","Box","TableContainer","Table","tableCellClasses","borderBottom","TableBody","map","t","TableRow","TableCell","align","Container","alignItems","marginBottom","WinnersAndPayout","Description","Games","NotFound","initialState","loading","user","authReducer","action","payload","gameReducer","combineReducers","api","axios","create","baseURL","headers","interceptors","response","use","res","err","store","dispatch","Promise","reject","setAuthToken","token","defaults","common","localStorage","setItem","removeItem","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","App","addEventListener","exact","path","component","Landing","Flip","Dice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","post"],"mappings":"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","file":"static/js/main.3d83ae46.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../../actions/auth'\r\n\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Container,\r\n} from '@mui/material'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport CasinoIcon from '@mui/icons-material/Casino'\r\nimport Settings from './Settings'\r\nimport { makeStyles, useMediaQuery } from '@material-ui/core'\r\n\r\nimport {\r\n  connectWallet,\r\n  getCurrentWalletConnected,\r\n  getWeb3,\r\n  getContract\r\n} from '../../../utils/interact.js'\r\n\r\nimport WinLoseModal from './WinLoseModal'\r\nimport { config } from '../../../utils/config.js'\r\nimport { saveWinnerData } from '../../../actions/game'\r\n\r\nimport win_effect from '../../../static/coinflip_win.wav'\r\nimport lose_effect from '../../../static/coinflip_lose.wav'\r\nimport space_effect from '../../../static/coinflip_space.wav'\r\n\r\nconst Win = new Audio(win_effect)\r\nconst Lose = new Audio(lose_effect)\r\nconst Space = new Audio(space_effect)\r\n\r\nconst Flip = ({ isAuthenticated, login, saveWinnerData }) => {\r\n  const theme = useTheme()\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'))\r\n  const Tx = require(\"ethereumjs-tx\").Transaction\r\n  const Common = require('ethereumjs-common').default\r\n  const BSC_FORK = Common.forCustomChain(\r\n    'mainnet',\r\n    {\r\n      name: 'Binance Smart Chain Test Net',\r\n      networkId: 97,\r\n      chainId: 97,\r\n      url: 'https://data-seed-prebsc-1-s1.binance.org:8545'\r\n    },\r\n    'istanbul',\r\n  );\r\n\r\n  //State variables\r\n  const [walletAddress, setWallet] = useState('')\r\n  const [selected, setSelected] = useState('HEADS')\r\n  const [betType, setBetType] = useState('HEADS')\r\n  const [betAmount, setBetAmount] = useState(0.05)\r\n  const [isWin, setIsWin] = useState(0)\r\n  const [open, setOpen] = React.useState(false)\r\n  const [mute, setMute] = useState(false)\r\n\r\n  // For smart contract\r\n  const [web3, setWeb3] = useState(undefined);\r\n  const [contract, setContract] = useState(undefined);\r\n  const [chainId, setChainId] = useState(undefined);\r\n  console.log(chainId)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // Connect Smart Contact\r\n      const web3 = await getWeb3()\r\n      const contract = await getContract()\r\n\r\n      // Connect Wallet\r\n      const { address } = await getCurrentWalletConnected()\r\n      \r\n      // Get Chain ID\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      // handleChainChanged(chainId);\r\n      console.log(chainId)\r\n      setChainId(chainId)\r\n\r\n      // Set states\r\n      setWeb3(web3)\r\n      setContract(contract)\r\n      setWallet(address)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  // Get nonce for sendSignedTransaction()\r\n  const getNonce = async () => {\r\n    return await web3.eth.getTransactionCount(config.owner)\r\n  }\r\n\r\n  // Save Current Data\r\n  const saveCurrentData = () => {\r\n    const data = {\r\n      address: walletAddress,\r\n      payout: betAmount * 2 * 0.98\r\n    }\r\n\r\n    console.log(data)\r\n\r\n    saveWinnerData(data)\r\n  }\r\n\r\n  // Connect Wallet\r\n  const connectWalletPressed = async () => {\r\n    //TODO: implement\r\n    const walletResponse = await connectWallet()\r\n    setWallet(walletResponse.address)\r\n\r\n    addWalletListener()\r\n\r\n    if (walletResponse.success) {\r\n      login(walletResponse.address)\r\n    }\r\n  }\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0])\r\n        } else {\r\n          setWallet('')\r\n        }\r\n      })\r\n    } else {\r\n    }\r\n  }\r\n\r\n  // Set Heads or Tails\r\n  const headsSelected = () => {\r\n    setSelected('HEADS')\r\n  }\r\n  const tailsSelected = () => {\r\n    setSelected('TAILS')\r\n  }\r\n\r\n  // Set Bet Amount\r\n  const handleChange = (event) => {\r\n    setBetAmount(event.target.value)\r\n  }\r\n\r\n  // Set Bet Min Value\r\n  const setMinValue = () => {\r\n    setBetAmount(0.05)\r\n  }\r\n  const MinButton = () => (\r\n    <Button\r\n      onClick={setMinValue}\r\n      sx={{\r\n        backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n        ml: 3,\r\n      }}\r\n    >\r\n      Min\r\n    </Button>\r\n  )\r\n\r\n  // Custom color For Heads and Tails\r\n  const HeadColor = withStyles({\r\n    root: {\r\n      fontSize: '20px !important',\r\n      textAlign: 'center',\r\n      background:\r\n        '-webkit-linear-gradient( #ffda6f 15%, #e2a139 60%, #a44e01 80%)',\r\n      WebkitBackgroundClip: 'text',\r\n      WebkitTextFillColor: 'transparent',\r\n    },\r\n  })(Typography)\r\n\r\n  const TailColor = withStyles({\r\n    root: {\r\n      fontSize: '20px !important',\r\n      textAlign: 'center',\r\n      background:\r\n        '-webkit-linear-gradient( #a44e01 15%, #e2a139 60%, #ffda6f 80%)',\r\n      WebkitBackgroundClip: 'text',\r\n      WebkitTextFillColor: 'transparent',\r\n    },\r\n  })(Typography)\r\n\r\n  // Set TextField's Color\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\r\n        borderColor: '#ffda6f',\r\n      },\r\n      '& .MuiOutlinedInput-input': {\r\n        color: '#e2a139',\r\n      },\r\n      width: '400px',\r\n    },\r\n  })\r\n  const classes = useStyles()\r\n\r\n  // onClick Bet Button\r\n  const startBet = () => {\r\n    \r\n    // parseFloat(ethers.utils.formatEther(betAmount) )  betAmount * 10 ** 10\r\n    // \r\n    contract.methods.Bet(config.owner, web3.utils.toWei(betAmount.toString(), 'ether')).send({\r\n      from: walletAddress,\r\n      value: web3.utils.toWei(betAmount.toString(), 'ether')\r\n    })\r\n      .on('receipt', async () => {\r\n        if (!mute) { Space.play() }\r\n\r\n        let currentType = ''\r\n        if (Math.random() <= 0.5) {\r\n          setBetType('HEADS')\r\n          currentType = 'HEADS'\r\n        } else {\r\n          setBetType('TAILS')\r\n          currentType = 'TAILS'\r\n        }\r\n\r\n        if (selected === currentType) {\r\n          setIsWin(1)\r\n          if (!mute) { Win.play() }\r\n\r\n          const privateKey = Buffer.from(config.owner_privatekey, 'hex')\r\n          const count = await getNonce()\r\n          const rawTx = {\r\n            nonce: web3.utils.toHex(count),\r\n            gasPrice: web3.utils.toHex(100000000000),\r\n            gasLimit: web3.utils.toHex(300000),\r\n            from: config.owner,\r\n            to: walletAddress,\r\n            value: web3.utils.toHex(web3.utils.toWei((betAmount * 2 * 0.98).toString(), 'ether')),\r\n          }\r\n\r\n          const tx = new Tx(rawTx, { 'common': BSC_FORK });\r\n          tx.sign(privateKey);\r\n          const serializedTx = tx.serialize();\r\n\r\n          web3.eth.sendSignedTransaction('0x' + serializedTx.toString('hex'))\r\n            .on('receipt', () => {\r\n              console.log()\r\n              saveCurrentData()\r\n            })\r\n        } else {\r\n          setIsWin(0)\r\n          if (!mute) { Lose.play() }\r\n        }\r\n        // Display WinLose Modal\r\n        handleClickOpen()\r\n      })\r\n  }\r\n\r\n  // Open and Close Win/Lose Modal\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = (value) => {\r\n    setOpen(false)\r\n  }\r\n\r\n  //Start Rendering\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"container\">\r\n          <Box\r\n            sx={{\r\n              background: 'rgba(255, 255, 255, 0.2)',\r\n              borderRadius: '10px',\r\n              height: 'auto',\r\n              width: '100%',\r\n              p: 3,\r\n            }}\r\n          >\r\n            {/* Rules and Audio settings */}\r\n            <Settings mute={mute} setMute={setMute} />\r\n\r\n            {/* Game Logic */}\r\n            <Container maxWidth=\"lg\">\r\n              {/* Set Coin Head or Tail */}\r\n              <Container maxWidth=\"sm\">\r\n                <Stack\r\n                  direction=\"row\"\r\n                  mt={5}\r\n                  justifyContent={isDesktop ? 'space-between' : 'center'}\r\n                  flexWrap=\"wrap\"\r\n                  sx={{ width: '100%' }}\r\n                >\r\n                  {/* Select Heads Button */}\r\n                  <Stack>\r\n                    <Button\r\n                      onClick={headsSelected}\r\n                      sx={{\r\n                        borderRadius: '12px',\r\n                        background:\r\n                          selected === 'HEADS'\r\n                            ? 'linear-gradient(rgb(255, 230, 105) 15%, rgb(255, 140, 100) 46%, rgb(255, 100, 100) 67%)'\r\n                            : '',\r\n                      }}\r\n                    >\r\n                      <Stack\r\n                        sx={{\r\n                          borderRadius: '10px',\r\n                          background: 'rgba(255, 255, 255, 0.2)',\r\n                          padding: '20px 25px',\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src=\"/assets/coin_head.png\"\r\n                          alt=\"..\"\r\n                          style={{ height: '65px' }}\r\n                        />\r\n                        <HeadColor> HEADs </HeadColor>\r\n                        <HeadColor> 1.8x </HeadColor>\r\n                      </Stack>\r\n                    </Button>\r\n                  </Stack>\r\n\r\n                  {/* Displaying Coin */}\r\n                  <Stack sx={{ height: '190px' }}>\r\n                    <div id=\"coin\" className={betType}>\r\n                      <div className=\"side-a\">\r\n                        <img\r\n                          src=\"/assets/coin_tail.png\"\r\n                          alt=\"..\"\r\n                          style={{ height: '190px' }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"side-b\">\r\n                        <img\r\n                          src=\"/assets/coin_head.png\"\r\n                          alt=\"..\"\r\n                          style={{ height: '190px' }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <WinLoseModal\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                      isWin={isWin}\r\n                    />\r\n                  </Stack>\r\n\r\n                  {/* Select Tails Button */}\r\n                  <Stack>\r\n                    <Button\r\n                      onClick={tailsSelected}\r\n                      sx={{\r\n                        borderRadius: '12px',\r\n                        background:\r\n                          selected === 'TAILS'\r\n                            ? 'linear-gradient(rgb(21, 241, 178) 15%, rgb(32, 226, 184) 46%, rgb(62, 186, 199) 60%, rgb(110, 123, 223) 100%, rgb(149, 71, 243) 100%)'\r\n                            : '',\r\n                      }}\r\n                    >\r\n                      <Stack\r\n                        sx={{\r\n                          borderRadius: '10px',\r\n                          background: 'rgba(255, 255, 255, 0.2)',\r\n                          padding: '20px 25px',\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src=\"/assets/coin_tail.png\"\r\n                          alt=\"..\"\r\n                          style={{ height: '65px' }}\r\n                        />\r\n                        <TailColor> TAILS </TailColor>\r\n                        <TailColor> 1.8x </TailColor>\r\n                      </Stack>\r\n                    </Button>\r\n                  </Stack>\r\n                </Stack>\r\n              </Container>\r\n\r\n              {/* Set Bet Amount */}\r\n              <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                md={12}\r\n                justifyContent=\"center\"\r\n                mt={3}\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  md={12}\r\n                  justifyContent=\"center\"\r\n                  mt={3}\r\n                >\r\n                  <HeadColor>Bet Amount</HeadColor>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  md={12}\r\n                  justifyContent=\"center\"\r\n                  mt={3}\r\n                >\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    type=\"number\"\r\n                    value={betAmount}\r\n                    className={classes.root}\r\n                    onChange={handleChange}\r\n                    InputProps={{ endAdornment: <MinButton /> }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {/* Connect Wallet and Start Betting */}\r\n              <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                md={12}\r\n                justifyContent=\"center\"\r\n                mb={3}\r\n              >\r\n                {walletAddress.length > 0 || isAuthenticated ? (\r\n                  <Button\r\n                    onClick={startBet}\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    startIcon={<CasinoIcon />}\r\n                    sx={{\r\n                      width: '300px',\r\n                      height: 54,\r\n                      mt: 3,\r\n                      borderRadius: '10px',\r\n                      fontWight: 'bold',\r\n                      background:\r\n                        'linear-gradient(120deg , #dc2424 15%, #4a569d 80%)',\r\n                      '&:hover': {\r\n                        background:\r\n                          'linear-gradient(120deg , #4a569d 15%, #dc2424 80%)'\r\n                      }\r\n                    }}\r\n                  >\r\n                    {' '}\r\n                    Bet {selected}{' '}\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    onClick={connectWalletPressed}\r\n                    sx={{\r\n                      width: '300px',\r\n                      height: 54,\r\n                      my: 3,\r\n                      borderRadius: '10px',\r\n                      fontWight: 'bold',\r\n                      background:\r\n                        'linear-gradient(120deg , #dc2424 15%, #4a569d 80%)',\r\n                      '&:hover': {\r\n                        background:\r\n                          'linear-gradient(120deg , #4a569d 15%, #dc2424 80%)'\r\n                      }\r\n                    }}\r\n                  >\r\n                    🦊\r\n                    CONNECT{' '}\r\n                  </Button>\r\n                )}\r\n              </Grid>\r\n            </Container>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nFlip.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n  game: state.game\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, saveWinnerData })(Flip)\r\n","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport { useMediaQuery } from '@material-ui/core'\r\nimport Button from '@mui/material/Button'\r\nimport { styled } from '@mui/material/styles'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nimport { Box, Stack } from '@mui/material'\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp'\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff'\r\nimport StorageIcon from '@mui/icons-material/Storage'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\n\r\nconst Setting = ({ isAuthenticated, mute, setMute }) => {\r\n  const theme = useTheme()\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'))\r\n  console.log('isAuthenticated:', isAuthenticated)\r\n  // State Values\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  // Open Modal Action\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n      padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      padding: theme.spacing(1),\r\n    },\r\n    '& .MuiPaper-root': {\r\n      // background: '-webkit-linear-gradient(-90deg, #ffda6f 30%, #e2a139 90%)',\r\n      background: 'rgba(255, 255, 255, 0.7)'\r\n    },\r\n  }))\r\n\r\n  const BootstrapDialogTitle = (props) => {\r\n    const { children, onClose, ...other } = props\r\n\r\n    return (\r\n      <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n        {children}\r\n        {onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={onClose}\r\n            sx={{\r\n              position: 'absolute',\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n    )\r\n  }\r\n\r\n  BootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Stack direction=\"row\" justifyContent={isDesktop ? 'flex-end' : 'center'}>\r\n        <Box mt={3}>\r\n          {/* Open Rule Modal */}\r\n          <IconButton\r\n            onClick={handleClickOpen}\r\n            sx={{ backgroundColor: 'rgba(255, 255, 255, 0.3)', mr: 3 }}\r\n          >\r\n            <StorageIcon />\r\n          </IconButton>\r\n\r\n          {/* Mute Audio */}\r\n          <IconButton\r\n            onClick={() => setMute(!mute)}\r\n            sx={{ backgroundColor: 'rgba(255, 255, 255, 0.3)' }}\r\n          >\r\n            {!mute ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n          </IconButton>\r\n\r\n        </Box>\r\n      </Stack>\r\n\r\n      {/* Dialog */}\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        sx={{ width: isDesktop ? '450px' : '350px', margin: 'auto', marginTop: isDesktop ? '' : '100px' }}\r\n      >\r\n        <BootstrapDialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Rules\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Start by setting your Bet Amount. You can set Win Chance, Prediction\r\n            Number and Multiplier by using the slider.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            You can also adjust parameters manually by changing input values.\r\n            After you are ALL set, place your bet and swipe the MONEYBUTTON to\r\n            start the game.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Roll starts and “one” number will be drawn from 0 to 9999. You win\r\n            if the roll outcome is within the chosen area.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            autoFocus\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            sx={{ borderRadius: '20px' }}\r\n          >\r\n            play now\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nSetting.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Setting)\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nfunction WinLoseModal(props) {\r\n  const { onClose, isWin, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  // Set TextField's Color\r\n\tconst useStyles = makeStyles({\r\n\t\troot: {\r\n\t\t\t\"& .MuiDialog-paperScrollPaper\": {\r\n        borderRadius: '48px',\r\n        marginTop: '110px'\r\n      }\r\n\t\t}\r\n\t})\r\n\tconst classes = useStyles()\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} className={classes.root}>\r\n      <DialogTitle sx={{ background: isWin ? 'rgb(45, 211, 191)' : 'rgb(243, 71, 102)', color: 'white', borderRadius: '48px', padding: '12px 29px', zIndex: '9999', textAlign: 'center', fontSize: '22px',  }}> {isWin ? 'YOU WON' : 'YOU LOSE'}</DialogTitle>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nWinLoseModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default WinLoseModal\r\n","export default __webpack_public_path__ + \"static/media/coinflip_win.81ba67a1.wav\";","export default __webpack_public_path__ + \"static/media/coinflip_lose.fa77d135.wav\";","export default __webpack_public_path__ + \"static/media/coinflip_space.59365ba9.wav\";","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../../actions/auth'\r\n\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Slider,\r\n} from '@mui/material'\r\nimport CasinoIcon from '@mui/icons-material/Casino'\r\nimport SwapVertIcon from '@mui/icons-material/SwapVert'\r\nimport Settings from './Settings'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { styled } from '@mui/material/styles'\r\nimport SyncAltIcon from '@mui/icons-material/SyncAlt'\r\nimport UnfoldMoreIcon from '@mui/icons-material/UnfoldMore'\r\n\r\nimport {\r\n  connectWallet,\r\n  getCurrentWalletConnected,\r\n  getWeb3,\r\n  getContract\r\n} from '../../../utils/interact.js'\r\n\r\nimport WinLoseModal from './WinLoseModal'\r\n\r\nimport { config } from '../../../utils/config.js'\r\nimport { saveWinnerData } from '../../../actions/game'\r\n\r\nimport win_effect from '../../../static/dice_win.wav'\r\nimport lose_effect from '../../../static/dice_lose.wav'\r\nimport space_effect from '../../../static/dice_space.wav'\r\n\r\nconst Win = new Audio(win_effect)\r\nconst Lose = new Audio(lose_effect)\r\nconst Space = new Audio(space_effect)\r\n\r\n\r\nconst Flip = ({ isAuthenticated, login, saveWinnerData }) => {\r\n  console.log('isAuthenticated:', isAuthenticated)\r\n\r\n  const Tx = require(\"ethereumjs-tx\").Transaction\r\n  const Common = require('ethereumjs-common').default\r\n  const BSC_FORK = Common.forCustomChain(\r\n    'mainnet',\r\n    {\r\n      name: 'Binance Smart Chain Test Net',\r\n      networkId: 97,\r\n      chainId: 97,\r\n      url: 'https://data-seed-prebsc-1-s1.binance.org:8545'\r\n    },\r\n    'istanbul',\r\n  );\r\n\r\n  //State variables\r\n  const [walletAddress, setWallet] = useState('')\r\n  const [betAmount, setBetAmount] = useState(0.05)\r\n  const [value, setValue] = useState(5)\r\n  const [track, setTrack] = useState(\"normal\")\r\n  const [betChance, setBetChance] = useState(5)\r\n  const [multiplier, setMultiplier] = useState(19.8)\r\n  const [isWin, setIsWin] = useState(0)\r\n  const [open, setOpen] = React.useState(false)\r\n  const [winValue, setWinValue] = React.useState('undefined')\r\n  const [mute, setMute] = useState(false)\r\n\r\n  // For smart contract\r\n  const [web3, setWeb3] = useState(undefined);\r\n  const [contract, setContract] = useState(undefined);\r\n  const [chainId, setChainId] = useState(undefined);\r\n  console.log(chainId)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const web3 = await getWeb3()\r\n      const contract = await getContract()\r\n\r\n      // Connect Wallet\r\n      const { address } = await getCurrentWalletConnected()\r\n\r\n      // Get Chain ID\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      // handleChainChanged(chainId);\r\n      console.log(chainId)\r\n      setChainId(chainId)\r\n\r\n      // Set states\r\n      setWeb3(web3)\r\n      setContract(contract)\r\n      setWallet(address)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const getNonce = async () => {\r\n    return await web3.eth.getTransactionCount(config.owner)\r\n  }\r\n\r\n  // save winner's data\r\n  const saveCurrentData = () => {\r\n    const data = {\r\n      address: walletAddress,\r\n      payout: betAmount * multiplier * 0.98\r\n    }\r\n    console.log(data)\r\n\r\n    saveWinnerData(data)\r\n  }\r\n\r\n  // Roll upper function\r\n  const getY = (x) => {\r\n    return -94.01 / (x - 100) + 0.0315\r\n  }\r\n\r\n  // Connect Wallet\r\n  const connectWalletPressed = async () => {\r\n    //TODO: implement\r\n    const walletResponse = await connectWallet()\r\n    setWallet(walletResponse.address)\r\n\r\n    addWalletListener()\r\n\r\n    if (walletResponse.success) {\r\n      login(walletResponse.address)\r\n    }\r\n  }\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0])\r\n        } else {\r\n          setWallet('')\r\n        }\r\n      })\r\n    } else {\r\n    }\r\n  }\r\n\r\n  // Set Bet Amount\r\n  const handleChange = (event) => {\r\n    setBetAmount(event.target.value)\r\n  }\r\n\r\n  // Set Bet Min Value\r\n  const setMinValue = () => {\r\n    setBetAmount(0.05)\r\n  }\r\n  const MinButton = () => (\r\n    <Button\r\n      onClick={setMinValue}\r\n      sx={{\r\n        backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n        ml: 3,\r\n      }}\r\n    >\r\n      Min\r\n    </Button>\r\n  )\r\n\r\n  // Set slider change value\r\n  const sliderChange = (event, newValue) => {\r\n    let v_value\r\n    if (newValue < 5) {\r\n      v_value = 5\r\n    } else if (newValue > 98) {\r\n      v_value = 98\r\n    } else {\r\n      v_value = newValue\r\n    }\r\n\r\n    setValue(v_value)\r\n    setBetChance(track === \"normal\" ? v_value : 100 - v_value)\r\n    // Roll Under: Rough Function y = 99/x, Roll Upper: ____y= b / (x - a) + cfunction \r\n    setMultiplier(track === \"normal\" ? (99 / v_value).toFixed(4) : getY(v_value).toFixed(4))\r\n  }\r\n\r\n  // Input slider value\r\n  const affectToSlider = (e) => {\r\n    let v_value\r\n    if (e.target.value < 5) {\r\n      v_value = 5\r\n    } else if (e.target.value > 98) {\r\n      v_value = 98\r\n    } else {\r\n      v_value = e.target.value\r\n    }\r\n\r\n    setValue(v_value)\r\n    setBetChance(track === \"normal\" ? v_value : 100 - v_value)\r\n    // Roll Under: Rough Function y = 99/x, Roll Upper: y = b/ (x - a) + c function\r\n    setMultiplier(track === \"normal\" ? (99 / v_value).toFixed(4) : getY(v_value).toFixed(4))\r\n  }\r\n\r\n  // Set TextField's Color\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\r\n        // border: 'solid 2px white'\r\n        borderRadius: '10px',\r\n      },\r\n      '& .MuiOutlinedInput-input': {\r\n        color: 'white',\r\n        fontWight: 'bold',\r\n        borderRadius: '10px',\r\n        background: 'linear-gradient(90deg, rgb(29, 39, 50), rgb(29, 39, 50))',\r\n        opacity: 0.9,\r\n      },\r\n    },\r\n    slider: {\r\n      '& .MuiSlider-root': {\r\n        color: 'rgb(129, 71, 218)',\r\n        height: '12px',\r\n      },\r\n      '& .MuiSlider-thumb': {\r\n        width: '30px',\r\n        height: '30px',\r\n      },\r\n    },\r\n    button: {\r\n      \"&.active\": {\r\n        background: 'black',\r\n      },\r\n    },\r\n  })\r\n  const classes = useStyles()\r\n\r\n  // For custom slider: color, height, etc...\r\n  const CustomizedSlider = styled(Slider)`\r\n    color: rgb(129, 71, 218);\r\n    height: 12px;\r\n    :hover {\r\n      color: rgb(86, 71, 218);\r\n    }\r\n  `\r\n  // onClick Bet Button\r\n  const startBet = () => {\r\n    const randomValue = Math.floor(Math.random() * 100) + 1\r\n    setWinValue(randomValue)\r\n\r\n    contract.methods.Bet(config.owner, web3.utils.toWei(betAmount.toString(), 'ether')).send({\r\n      from: walletAddress,\r\n      value: web3.utils.toWei(betAmount.toString(), 'ether')\r\n    })\r\n      .on('receipt', async () => {\r\n        if (!mute) { Space.play() }\r\n\r\n        if (track === \"normal\") {\r\n          if (randomValue < value) {\r\n            setIsWin(1)\r\n\r\n            if (!mute) { Win.play() }\r\n\r\n            const privateKey = Buffer.from(config.owner_privatekey, 'hex')\r\n            const count = await getNonce()\r\n            const rawTx = {\r\n              nonce: web3.utils.toHex(count),\r\n              gasPrice: web3.utils.toHex(100000000000),\r\n              gasLimit: web3.utils.toHex(300000),\r\n              from: config.owner,\r\n              to: walletAddress,\r\n              value: web3.utils.toHex(web3.utils.toWei((betAmount * multiplier * 0.98).toString(), 'ether')),\r\n            }\r\n\r\n            const tx = new Tx(rawTx, { 'common': BSC_FORK });\r\n            tx.sign(privateKey);\r\n            const serializedTx = tx.serialize();\r\n\r\n            web3.eth.sendSignedTransaction('0x' + serializedTx.toString('hex'))\r\n              .on('receipt', () => {\r\n                console.log()\r\n                saveCurrentData()\r\n              });\r\n          } else {\r\n            setIsWin(0)\r\n            if (!mute) { Lose.play() }\r\n          }\r\n\r\n          handleClickOpen()\r\n        } else {\r\n          if (randomValue > value) {\r\n            setIsWin(1)\r\n            if (!mute) { Win.play() }\r\n\r\n            const privateKey = Buffer.from(config.owner_privatekey, 'hex')\r\n            const count = await getNonce()\r\n            const rawTx = {\r\n              nonce: web3.utils.toHex(count),\r\n              gasPrice: web3.utils.toHex(100000000000),\r\n              gasLimit: web3.utils.toHex(300000),\r\n              from: config.owner,\r\n              to: walletAddress,\r\n              value: web3.utils.toHex(web3.utils.toWei((betAmount * multiplier * 0.98).toString(), 'ether')),\r\n            }\r\n\r\n            const tx = new Tx(rawTx, { 'common': BSC_FORK });\r\n            tx.sign(privateKey);\r\n\r\n            const serializedTx = tx.serialize();\r\n\r\n            web3.eth.sendSignedTransaction('0x' + serializedTx.toString('hex'))\r\n              .on('receipt', () => {\r\n                console.log()\r\n                saveCurrentData()\r\n              });\r\n          } else {\r\n            setIsWin(0)\r\n            if (!mute) { Lose.play() }\r\n          }\r\n\r\n          handleClickOpen()\r\n        }\r\n      })\r\n  }\r\n\r\n  // Bet direction\r\n  const setBetDirection = (e) => {\r\n    // setTrack(status)\r\n    setTrack(e.target.id)\r\n    setBetChance(e.target.id === \"normal\" ? (value) : (100 - value))\r\n\r\n    // Roll Under: Rough Function y = 99/x, Roll Upper: y = b / (x - a) + c function\r\n    setMultiplier(e.target.id === \"normal\" ? (99 / value).toFixed(4) : getY(value).toFixed(4))\r\n  }\r\n\r\n  // Open and Close Win/Lose Modal\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = (value) => {\r\n    setOpen(false)\r\n  }\r\n\r\n  //Start Rendering\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"container\">\r\n          <Box\r\n            sx={{\r\n              background: 'rgba(255, 255, 255, 0.2)',\r\n              borderRadius: '10px',\r\n              height: 'auto',\r\n              width: '100%',\r\n              p: 3,\r\n            }}\r\n          >\r\n            {/* Rules and Audio settings */}\r\n            <Settings mute={mute} setMute={setMute} />\r\n\r\n            {/* Win Lose Modal */}\r\n            <WinLoseModal\r\n              open={open}\r\n              onClose={handleClose}\r\n              isWin={isWin}\r\n              value={winValue}\r\n            />\r\n\r\n            {/* Game Logic */}\r\n            <Grid container spacing={2} mt={1}>\r\n              {/* Showing Win & Multiplier & Win Chance */}\r\n              <Grid item xs={12} md={4}>\r\n                <Stack>\r\n                  <Typography sx={{ color: '#fff', mb: 2 }}>\r\n                    Roll Over to Win\r\n                  </Typography>\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    value={value}\r\n                    type=\"number\"\r\n                    className={classes.root}\r\n                    onChange={affectToSlider}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                      endAdornment: <SyncAltIcon />,\r\n                    }}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <Stack>\r\n                  <Typography sx={{ color: '#fff', mb: 2 }}>\r\n                    Multiplier\r\n                  </Typography>\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    value={'x ' + multiplier}\r\n                    className={classes.root}\r\n                    onChange={handleChange}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                      endAdornment: <UnfoldMoreIcon />,\r\n                    }}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <Stack>\r\n                  <Typography sx={{ color: '#fff', mb: 2 }}>\r\n                    Win Chance\r\n                  </Typography>\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    value={betChance + ' %'}\r\n                    className={classes.root}\r\n                    onChange={handleChange}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                      endAdornment: <UnfoldMoreIcon />,\r\n                    }}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Roll Setting Slider */}\r\n            <Box\r\n              sx={{\r\n                my: 3,\r\n                width: '100%',\r\n                background: 'rgb(34, 41, 52)',\r\n                borderRadius: '12px',\r\n                mx: 'auto',\r\n                p: 3,\r\n              }}\r\n            >\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} md={4}>\r\n                  {/* Button Roll Under */}\r\n                  <Stack direction=\"row\" justifyContent=\"center\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      startIcon={<SwapVertIcon />}\r\n                      className={classes.button}\r\n                      id=\"normal\"\r\n                      onClick={setBetDirection}\r\n                      sx={{\r\n                        height: '40px',\r\n                        borderRadius: '40px',\r\n                        color: track === \"normal\" ? 'white' : 'rgb(104, 213, 215)',\r\n                        border: '1px solid rgb(104, 213, 215)',\r\n                        '&:hover': {\r\n                          background: 'linear-gradient(102.73deg, rgb(104, 213, 215) 2.16%, rgb(25, 159, 135) 92.24%)',\r\n                          color: \"#fff\",\r\n                          border: 'none'\r\n                        },\r\n                        background: track === \"normal\" ?\r\n                          'linear-gradient(102.73deg, rgb(104, 213, 215) 2.16%, rgb(25, 159, 135) 92.24%)' :\r\n                          \"\"\r\n                      }}\r\n                    >\r\n                      Roll under\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n\r\n                {/* Showing Selected Value */}\r\n                <Grid item xs={12} md={4}>\r\n                  <Stack direction=\"row\" justifyContent=\"center\">\r\n                    <Button\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                      sx={{\r\n                        mt: 2,\r\n                        background:\r\n                          'linear-gradient(153.84deg, rgba(21, 241, 178, 0.3) 8.53%, rgba(32, 226, 184, 0.3) 19.97%, rgba(62, 186, 199, 0.3) 42.01%, rgba(110, 123, 223, 0.3) 72.14%, rgba(149, 71, 243, 0.3) 94.85%)',\r\n                        borderRadius: '40px',\r\n                        width: '150px',\r\n                        padding: '10px',\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        sx={{\r\n                          background:\r\n                            'linear-gradient(153.84deg, rgb(21, 241, 178) 8.53%, rgb(32, 226, 184) 19.97%, rgb(62, 186, 199) 42.01%, rgb(110, 123, 223) 72.14%, rgb(149, 71, 243) 94.85%)',\r\n                          padding: '5px',\r\n                          width: '150px',\r\n                          borderRadius: '40px',\r\n                          fontWeight: 'bold',\r\n                          fontSize: '20px',\r\n                        }}\r\n                      >\r\n                        {value}\r\n                      </Box>\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n\r\n                {/* Button Roll Upper */}\r\n                <Grid item xs={12} md={4}>\r\n                  <Stack direction=\"row\" justifyContent=\"center\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      startIcon={<SwapVertIcon />}\r\n                      id=\"inverted\"\r\n                      onClick={setBetDirection}\r\n                      sx={{\r\n                        height: '40px',\r\n                        borderRadius: '40px',\r\n                        color: track === \"inverted\" ? 'white' : 'rgb(104, 213, 215)',\r\n                        border: '1px solid rgb(104, 213, 215)',\r\n                        '&:hover': {\r\n                          background: 'linear-gradient(102.73deg, rgb(104, 213, 215) 2.16%, rgb(25, 159, 135) 92.24%)',\r\n                          color: \"#fff\",\r\n                          border: 'none'\r\n                        },\r\n                        background: track === \"inverted\" ?\r\n                          'linear-gradient(102.73deg, rgb(104, 213, 215) 2.16%, rgb(25, 159, 135) 92.24%)' :\r\n                          \"\"\r\n                      }}\r\n                    >\r\n                      Roll Upper\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <CustomizedSlider\r\n                className={classes.slider}\r\n                defaultValue={5}\r\n                aria-label=\"Small\"\r\n                valueLabelDisplay=\"auto\"\r\n                marks\r\n                value={value}\r\n                onChange={sliderChange}\r\n                track={track}\r\n              />\r\n            </Box>\r\n\r\n            {/* Set Bet Amount & Payout */}\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <Stack>\r\n                  <Typography sx={{ color: '#fff', width: '379px', mb: 2 }}>\r\n                    Bet Amount\r\n                  </Typography>\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    type=\"number\"\r\n                    value={betAmount}\r\n                    className={classes.root}\r\n                    onChange={handleChange}\r\n                    InputProps={{ endAdornment: <MinButton /> }}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Stack>\r\n                  <Typography sx={{ color: '#fff', width: '379px', mb: 2 }}>\r\n                    Payout\r\n                  </Typography>\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    type=\"number\"\r\n                    value={(betAmount * multiplier * 0.98).toFixed(4)}\r\n                    readOnly\r\n                    InputProps={{ readOnly: true, endAdornment: 'BNB' }}\r\n                    sx={{\r\n                      border: 'solid 3px',\r\n                      borderRadius: '10px',\r\n                      fontColor: '#fff',\r\n                    }}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Connect Wallet and Start Betting */}\r\n            <Stack direction=\"row\" justifyContent=\"center\">\r\n              {walletAddress.length > 0 || isAuthenticated ? (\r\n                <Button\r\n                  onClick={startBet}\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  startIcon={<CasinoIcon />}\r\n                  sx={{\r\n                    width: '300px',\r\n                    height: 54,\r\n                    mt: 3,\r\n                    mb: 3,\r\n                    borderRadius: '10px',\r\n                    fontWight: 'bold',\r\n                    background:\r\n                      'linear-gradient(95.32deg, rgb(129, 86, 218) 2.68%, rgb(89, 41, 137) 84.52%)',\r\n                    '&:hover': {\r\n                      background:\r\n                        'linear-gradient(95.32deg,rgb(89, 41, 137)  2.68%, rgb(129, 86, 218) 84.52%)',\r\n                    },\r\n                  }}\r\n                >\r\n                  {' '}\r\n                  ROLL DICE{' '}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={connectWalletPressed}\r\n                  sx={{\r\n                    width: '300px',\r\n                    height: 54,\r\n                    mt: 3,\r\n                    mb: 3,\r\n                    borderRadius: '10px',\r\n                    fontWight: 'bold',\r\n                    // linear-gradient(90deg , #dc2424 15%, #4a569d 80%)\r\n                    background:\r\n                      'linear-gradient(95.32deg, rgb(129, 86, 218) 2.68%, rgb(89, 41, 137) 84.52%)',\r\n                  }}\r\n                >\r\n                  🦊\r\n                  CONNECT{' '}\r\n                </Button>\r\n              )}\r\n            </Stack>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nFlip.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n  game: state.game\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, saveWinnerData })(Flip)\r\n","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport { useMediaQuery } from '@material-ui/core'\r\nimport Button from '@mui/material/Button'\r\nimport { styled } from '@mui/material/styles'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nimport { Box, Stack } from '@mui/material'\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp'\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff'\r\nimport StorageIcon from '@mui/icons-material/Storage'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\n\r\nconst Setting = ({ isAuthenticated, mute, setMute }) => {\r\n  const theme = useTheme()\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'))\r\n  console.log('isAuthenticated:', isAuthenticated)\r\n  // State Values\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  // Open Modal Action\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n      padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      padding: theme.spacing(1),\r\n    },\r\n    '& .MuiPaper-root': {\r\n      background: 'rgba(255, 255, 255, 0.7)',\r\n    },\r\n  }))\r\n\r\n  const BootstrapDialogTitle = (props) => {\r\n    const { children, onClose, ...other } = props\r\n\r\n    return (\r\n      <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n        {children}\r\n        {onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={onClose}\r\n            sx={{\r\n              position: 'absolute',\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n    )\r\n  }\r\n\r\n  BootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Stack direction=\"row\" justifyContent={isDesktop ? 'flex-end' : 'center'}>\r\n        <Box mt={2}>\r\n          {/* Open Rule Modal */}\r\n          <IconButton\r\n            onClick={handleClickOpen}\r\n            sx={{ backgroundColor: 'rgba(255, 255, 255, 0.3)', mr: 3 }}\r\n          >\r\n            <StorageIcon />\r\n          </IconButton>\r\n\r\n          {/* Mute Audio */}\r\n          <IconButton\r\n            onClick={ () => setMute }\r\n            sx={{ backgroundColor: 'rgba(255, 255, 255, 0.3)' }}\r\n          >\r\n            {!mute ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n          </IconButton>\r\n        </Box>\r\n      </Stack>\r\n\r\n      {/* Dialog */}\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        sx={{ width: isDesktop ? '450px' : '350px', margin: 'auto', marginTop: isDesktop ? '' : '100px' }}\r\n      >\r\n        <BootstrapDialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Rules\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Start by setting your Bet Amount. You can set Win Chance, Prediction\r\n            Number and Multiplier by using the slider.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            You can also adjust parameters manually by changing input values.\r\n            After you are ALL set, place your bet and swipe the MONEYBUTTON to\r\n            start the game.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Roll starts and “one” number will be drawn from 0 to 9999. You win\r\n            if the roll outcome is within the chosen area.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            autoFocus\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            sx={{ borderRadius: '20px' }}\r\n          >\r\n            play now\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nSetting.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Setting)\r\n","import * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nfunction WinLoseModal(props) {\r\n  const { onClose, isWin, open, value } = props\r\n\r\n  const handleClose = () => {\r\n    onClose()\r\n  }\r\n\r\n  // Set TextField's Color\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      '& .MuiDialog-paperScrollPaper': {\r\n        borderRadius: '48px',\r\n        marginTop: '-350px',\r\n      },\r\n    },\r\n  })\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} className={classes.root}>\r\n      <DialogTitle\r\n        sx={{\r\n          background: isWin ? 'rgb(45, 211, 191)' : 'rgb(243, 71, 102)',\r\n          color: 'white',\r\n          borderRadius: '48px',\r\n          padding: '12px 29px',\r\n          zIndex: '9999',\r\n          textAlign: 'center',\r\n          fontSize: '22px',\r\n        }}\r\n      >\r\n        {value + '! '}\r\n        {isWin ? 'YOU WON' : 'YOU LOSE'}\r\n      </DialogTitle>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nWinLoseModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default WinLoseModal\r\n","export default __webpack_public_path__ + \"static/media/dice_win.413fd435.wav\";","export default __webpack_public_path__ + \"static/media/dice_lose.fa77d135.wav\";","export default __webpack_public_path__ + \"static/media/dice_space.8b692cb7.wav\";","export const config = {\r\n  bsc_test: 'https://data-seed-prebsc-1-s1.binance.org:8545',\r\n  bsc_main: 'https://bsc-dataseed.binance.org',\r\n  owner: '0xca368cD45b2738DD67c80A502f40a5fE4A0441e8',\r\n  owner_privatekey: '2656ee2141dc1194b9a05d1c59c62f29900a60eead8173389c3fec68591e7822',\r\n  contractAddress: '0x081823c0CFc49A980344475A04de30684BA37ff6'\r\n}\r\n\r\n// function Bet(address owner, uint256 _betAmount) payable {\r\n//   owner.transfer(_betAmount);\r\n// }","export const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SET_TOP_WINNERS = 'SET_TOP_WINNERS';\r\nexport const SET_TOTAL_PAYOUT = 'SET_TOTAL_PAYOUT'\r\n","import Web3 from 'web3';\r\nimport { config } from './config.js'\r\n\r\nconst contractABI = require(\"./contract-abi.json\");\r\nconst contractAddress = config.contractAddress;\r\n\r\n// Handle changed or accounts changed\r\nwindow.ethereum.on('chainChanged', handleChainChanged);\r\nfunction handleChainChanged(_chainId) {\r\n  // We recommend reloading the page, unless you must do otherwise\r\n  window.location.reload();\r\n}\r\n\r\nwindow.ethereum.on('accountsChanged', handleAccountsChanged);\r\n// For now, 'eth_accounts' will continue to always return an array\r\nfunction handleAccountsChanged(accounts) {\r\n  if (accounts.length === 0) {\r\n    // MetaMask is locked or the user has not connected any accounts\r\n    console.log('Please connect to MetaMask.');\r\n  } else if (accounts[0] ) {\r\n    // currentAccount = accounts[0];\r\n    window.location.reload()\r\n    // Do any other work!\r\n  }\r\n}\r\n\r\nexport const getWeb3 = async () => {\r\n  return new Web3(window.web3.currentProvider);\r\n}\r\n\r\nexport const getContract = async () => {\r\n  // const web3 = new Web3('https://data-seed-prebsc-1-s1.binance.org:8545')\r\n  const web3 = await getWeb3()\r\n  const contract = new web3.eth.Contract(contractABI, contractAddress);\r\n  console.log(\"contract=>\", contract)\r\n  return contract\r\n}\r\n\r\nexport const connectWallet = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      const obj = {\r\n        status: \"👆🏽 Click above button to play the game.\",\r\n        success: \"true\",\r\n        address: addressArray[0],\r\n      };\r\n      return obj;\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        success: \"false\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      success: \"false\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" href={`https://metamask.io/download.html`} rel=\"noreferrer\">\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n          status: \"👆🏽 Click the above button to paly the game.\",\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n          status: \"🦊 Connect to Metamask using the above button.\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" href={`https://metamask.io/download.html`} rel=\"noreferrer\">\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login, logout } from '../../actions/auth'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport { Button, Typography, useMediaQuery, Stack } from '@mui/material'\r\nimport {\r\n  connectWallet,\r\n  getCurrentWalletConnected,\r\n} from '../../utils/interact.js'\r\n// import useOffSetTop from '../../utils/useOffsetTop'\r\n// import Alert from '@mui/material/Alert';\r\n// import AlertTitle from '@mui/material/AlertTitle';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated }, login, logout }) => {\r\n  const theme = useTheme()\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'))\r\n  // const isOffset = useOffSetTop(100)\r\n\r\n  console.log(isAuthenticated)\r\n  //State variables\r\n  const [walletAddress, setWallet] = useState('')\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // You can await here\r\n      const { address } = await getCurrentWalletConnected()\r\n      setWallet(address)\r\n      // ...\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const connectWalletPressed = async () => {\r\n    //TODO: implement\r\n    const walletResponse = await connectWallet()\r\n    setWallet(walletResponse.address)\r\n\r\n    addWalletListener()\r\n\r\n    if (walletResponse.success) {\r\n      login(walletResponse.address)\r\n    }\r\n  }\r\n\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0])\r\n        } else {\r\n          setWallet('')\r\n        }\r\n      })\r\n    } else {\r\n      // setStatus(\r\n      //   <p>\r\n      //     {\" \"}\r\n      //     🦊{\" \"}\r\n      //     <a href={`https://metamask.io/download.html`}>\r\n      //       You must install Metamask, a virtual Ethereum wallet, in your\r\n      //       browser.\r\n      //     </a>\r\n      //   </p>\r\n      // );\r\n    }\r\n  }\r\n\r\n  const authLinks = (\r\n    <ul>\r\n      <Button\r\n        variant=\"text\"\r\n        style={{\r\n          color: 'white',\r\n          marginRight: '3px',\r\n          fontSize: '86',\r\n          fontWeight: 'bold',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n        }}\r\n      >\r\n        Games\r\n      </Button>\r\n      <Button\r\n        onClick={connectWalletPressed}\r\n        variant=\"text\"\r\n        style={{\r\n          color: 'white',\r\n          marginRight: '3px',\r\n          fontSize: '86',\r\n          fontWeight: 'bold',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n        }}\r\n      >\r\n        {walletAddress.length > 0 ? (\r\n          'Connected: ' +\r\n          String(walletAddress).substring(0, 6) +\r\n          '...' +\r\n          String(walletAddress).substring(38)\r\n        ) : (\r\n          <span>🦊 Connect Wallet</span>\r\n        )}\r\n      </Button>\r\n    </ul>\r\n  )\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      {walletAddress.length > 0 ? (\r\n        <Button\r\n          variant=\"text\"\r\n          href=\"/\"\r\n          style={{\r\n            color: 'white',\r\n            marginRight: '3px',\r\n            fontSize: '86',\r\n            fontWeight: 'bold',\r\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n          }}\r\n        >\r\n          Games\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          variant=\"text\"\r\n          href=\"/\"\r\n          style={{\r\n            color: 'white',\r\n            marginRight: '3px',\r\n            fontSize: '86',\r\n            fontWeight: 'bold',\r\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            width: '152.6px',\r\n          }}\r\n        >\r\n          Games\r\n        </Button>\r\n      )}\r\n      <Button\r\n        onClick={connectWalletPressed}\r\n        variant=\"text\"\r\n        style={{\r\n          color: 'white',\r\n          marginRight: '3px',\r\n          fontSize: '86',\r\n          fontWeight: 'bold',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n          fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n          width: {},\r\n        }}\r\n      >\r\n        {isAuthenticated || walletAddress.length > 0 ? (\r\n          'Connected: ' +\r\n          String(walletAddress).substring(0, 6) +\r\n          '...' +\r\n          String(walletAddress).substring(38)\r\n        ) : (\r\n          <span>🦊 Connect Wallet</span>\r\n        )}\r\n      </Button>\r\n    </ul>\r\n  )\r\n\r\n  if (isDesktop) {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Link to=\"/\">\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ width: '40px', height: '20px' }}\r\n          />\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <Typography\r\n            style={{\r\n              color: '#ffffff',\r\n              fontSize: '34px',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            }}\r\n          >\r\n            Smart Games\r\n          </Typography>\r\n        </Link>\r\n        <Typography\r\n          style={{\r\n            color: '#ffffff',\r\n            fontSize: '16px',\r\n            marginTop: '10px',\r\n            fontFamily: 'ErasITC-Light,AdobeInvisFont,MyriadPro-Regular',\r\n          }}\r\n        >\r\n          Provable fair games that is entirely based on smart contract with low\r\n          1% transaction fees, no sign ups & deposits.\r\n        </Typography>\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      </nav>\r\n    )\r\n  } else {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Stack direction=\"row\">\r\n        <Link to=\"/\">\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ width: '40px', height: '20px', marginTop: '15px' }}\r\n          />\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <Typography\r\n            style={{\r\n              color: '#ffffff',\r\n              fontSize: '34px',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            }}\r\n          >\r\n            Smart Games\r\n          </Typography>\r\n        </Link>\r\n        </Stack>\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, logout })(Navbar)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n} from '@mui/material'\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\r\n\r\nimport { getTopWinners, getTotalPayout } from '../../actions/game'\r\n\r\nconst Landing = ({ isAuthenticated, top_winners, total_payout, getTopWinners, getTotalPayout }) => {\r\n  useEffect(() => {\r\n    getTopWinners()\r\n\r\n    getTotalPayout()\r\n  }, [getTopWinners, getTotalPayout])\r\n\r\n  console.log('landing: tPayout, tWnners', total_payout, top_winners)\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={6}>\r\n        <Box\r\n          sx={{\r\n            background: 'rgba(255, 255, 255, 0.1)',\r\n            borderRadius: '10px',\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              fontSize: '20px',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            }}\r\n          >\r\n            24H Top Winners\r\n          </Typography>\r\n          <TableContainer>\r\n            <Table\r\n              sx={{\r\n                [`& .${tableCellClasses.root}`]: {\r\n                  borderBottom: 'none',\r\n                },\r\n              }}\r\n            >\r\n              <TableBody>\r\n                {top_winners && top_winners.map(t => (\r\n                  <TableRow style={{ height: '10px' }}>\r\n                    <TableCell\r\n                      align=\"center\"\r\n                      sx={{ color: '#fff', height: 'auto !important' }}\r\n                    >\r\n                      {String(t.address).substring(0, 6) +\r\n                      '...' +\r\n                      String(t.address).substring(38)}\r\n                    </TableCell>\r\n                    <TableCell sx={{ color: '#fff' }}>{t.payout.toFixed(4)} BUSD</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Box\r\n          sx={{\r\n            background: 'rgba(255, 255, 255, 0.1)',\r\n            borderRadius: '10px',\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              fontSize: '20px',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            }}\r\n          >\r\n            Total Payout\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              fontSize: '18px',\r\n              mt: 1,\r\n              fontFamily: 'ErasITC-Light,AdobeInvisFont,MyriadPro-Regular',\r\n            }}\r\n          >\r\n            {total_payout} BUSD\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  top_winners: state.game.top_winners,\r\n  total_payout: state.game.total_payout,\r\n  game: state.game\r\n})\r\n\r\nexport default connect(mapStateToProps, { getTopWinners, getTotalPayout })(Landing)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Typography, Stack, Button } from '@mui/material'\r\nimport { Container, useMediaQuery } from '@material-ui/core'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  const theme = useTheme()\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'))\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Stack spacing={3} sx={{ width: '100%' }}>\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            fontSize: '34px',\r\n            fontWeight: 'bold',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          Games\r\n        </Typography>\r\n        <Stack\r\n          direction=\"row\"\r\n          justifyContent={isDesktop ? 'space-between' : 'center'}\r\n          alignItems=\"bottom\"\r\n          flexWrap=\"wrap\"\r\n        >\r\n          <Stack spacing={1} sx={{ m: 1 }}>\r\n            <img\r\n              src=\"/assets/coin-flip-white.png\"\r\n              alt=\"smart-game\"\r\n              style={{\r\n                height: '150px',\r\n                width: '80%',\r\n                justifyContent: 'center',\r\n              }}\r\n            />\r\n            <Typography\r\n              sx={{\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n              }}\r\n            >\r\n              Smart Coin Flip\r\n            </Typography>\r\n            <Button\r\n              size=\"small\"\r\n              href=\"/flip\"\r\n              sx={{\r\n                padding: 0,\r\n                backgroundColor: '#F4ADAB',\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n                fontColor: '#B52F1B',\r\n                mb: 10,\r\n              }}\r\n            >\r\n              {' '}\r\n              Play Now{' '}\r\n            </Button>\r\n          </Stack>\r\n          <Stack spacing={1} sx={{ m: 1 }}>\r\n            <img\r\n              src=\"/assets/dice.png\"\r\n              alt=\"smart-game\"\r\n              style={{ height: '150px' }}\r\n            />\r\n            <Typography\r\n              sx={{\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n              }}\r\n            >\r\n              Smart Dice\r\n            </Typography>\r\n            <Button\r\n              size=\"small\"\r\n              href=\"/dice\"\r\n              sx={{\r\n                padding: 0,\r\n                backgroundColor: '#F4ADAB',\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n                fontColor: '#B52F1B',\r\n                marginBottom: 10,\r\n              }}\r\n            >\r\n              {' '}\r\n              Play Now{' '}\r\n            </Button>\r\n          </Stack>\r\n          <Stack spacing={1} sx={{ m: 1 }}>\r\n            <img\r\n              src=\"/assets/raffle.png\"\r\n              alt=\"smart-game\"\r\n              style={{ height: '150px' }}\r\n            />\r\n            <Typography\r\n              sx={{\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n              }}\r\n            >\r\n              Smart Raffle\r\n            </Typography>\r\n            <Button\r\n              size=\"small\"\r\n              sx={{\r\n                padding: 0,\r\n                backgroundColor: '#F4ADAB',\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n                fontColor: '#B52F1B',\r\n                marginBottom: 10,\r\n              }}\r\n            >\r\n              {' '}\r\n              Comming Soon{' '}\r\n            </Button>\r\n          </Stack>\r\n          <Stack spacing={1} sx={{ m: 1 }}>\r\n            <img\r\n              src=\"/assets/two-dice.png\"\r\n              alt=\"smart-game\"\r\n              style={{ height: '150px' }}\r\n            />\r\n            <Typography\r\n              sx={{\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n              }}\r\n            >\r\n              Smart Two Dice\r\n            </Typography>\r\n            <Button\r\n              size=\"small\"\r\n              sx={{\r\n                padding: 0,\r\n                backgroundColor: '#F4ADAB',\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n                fontColor: '#B52F1B',\r\n                marginBottom: 10,\r\n              }}\r\n            >\r\n              {' '}\r\n              Comming Soon{' '}\r\n            </Button>\r\n          </Stack>\r\n          <Stack spacing={1} sx={{ m: 1 }}>\r\n            <img\r\n              src=\"/assets/roll.png\"\r\n              alt=\"smart-game\"\r\n              style={{ height: '150px' }}\r\n            />\r\n            <Typography\r\n              sx={{\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n              }}\r\n            >\r\n              Smart Roll\r\n            </Typography>\r\n            <Button\r\n              size=\"small\"\r\n              sx={{\r\n                padding: 0,\r\n                backgroundColor: '#F4ADAB',\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n                fontColor: '#B52F1B',\r\n                '&hover': { backgroundColor: '#000', color: '#fff' },\r\n                marginBottom: 10,\r\n              }}\r\n            >\r\n              {' '}\r\n              Comming Soon{' '}\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Container>\r\n  )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Grid, Typography } from '@mui/material'\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            fontSize: '34px',\r\n            fontWeight: 'bold',\r\n          }}\r\n        >\r\n          Transparent\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontSize: '16px',\r\n            fontFamily: 'ErasITC-Light, AdobeInvisFont, MyriadPro-Regular',\r\n          }}\r\n        >\r\n          All transactions are recorded on the blockchain\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            fontSize: '34px',\r\n            fontWeight: 'bold',\r\n          }}\r\n        >\r\n          Anonymous\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontSize: '16px',\r\n            fontFamily: 'ErasITC-Light, AdobeInvisFont, MyriadPro-Regular',\r\n          }}\r\n        >\r\n          No user data is stored, each player is recognised only by thei\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            fontSize: '34px',\r\n            fontWeight: 'bold',\r\n          }}\r\n        >\r\n          Provably Fair\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontSize: '16px',\r\n            fontFamily: 'ErasITC-Light, AdobeInvisFont, MyriadPro-Regular',\r\n          }}\r\n        >\r\n          Gameplay is governed by Smart Contract which is uploaded onto\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid } from '@mui/material'\r\nimport WinnersAndPayout from './WinnersAndPayout.js'\r\nimport Games from './Games.js'\r\nimport Description from './Description.js'\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"landing-inner\">\r\n        <Grid container spacing={2} mt={15}>\r\n          <Grid item xs={12} md={6}>\r\n            {/* Winners and Total Payout */}\r\n            <WinnersAndPayout />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            {/* Description */}\r\n            <Description />\r\n          </Grid>\r\n        </Grid>\r\n        {/* Games */}\r\n        <Games />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React, { Fragment } from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1 className='x-large text-primary'>\r\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\r\n      </h1>\r\n      <p className='large'>Sorry, this page does not exist</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  address:null,\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nfunction authReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        address: payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        address: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import {\r\n  SET_TOP_WINNERS,\r\n  SET_TOTAL_PAYOUT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  top_winners:null,\r\n  total_payout: 0,\r\n};\r\n\r\nfunction gameReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_TOP_WINNERS:\r\n      return {\r\n        ...state,\r\n        top_winners: payload\r\n      };\r\n    case SET_TOTAL_PAYOUT:\r\n      return {\r\n        ...state,\r\n        total_payout: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default gameReducer;\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport game from './game';\r\n\r\nexport default combineReducers({\r\n  auth, game\r\n});\r\n","import axios from 'axios';\r\nimport store from '../store';\r\nimport { LOGOUT } from '../actions/types';\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n  res => res,\r\n  err => {\r\n    if (err.response.status === 401) {\r\n      store.dispatch({ type: LOGOUT });\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import api from './api';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    api.defaults.headers.common['x-auth-token'] = token;\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    delete api.defaults.headers.common['x-auth-token'];\r\n    localStorage.removeItem('token');\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// initialize current state from redux store for subscription comparison\r\n// preventing undefined error\r\nlet currentState = store.getState();\r\n\r\nstore.subscribe(() => {\r\n  // keep track of the previous and current state to compare changes\r\n  let previousState = currentState;\r\n  currentState = store.getState();\r\n  // if the token changes set the value in localStorage and axios headers\r\n  if (previousState.auth.token !== currentState.auth.token) {\r\n    const token = currentState.auth.token;\r\n    setAuthToken(token);\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n// import logo from './logo.svg';\r\nimport './App.css'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Landing from './components/layout/Landing'\r\nimport Flip from './components/games/Flip/index.js';\r\nimport Dice from './components/games/Dice/index.js';\r\nimport NotFound from './components/layout/NotFound';\r\n// import Routes from './components/routing/Routes'\r\nimport { LOGOUT } from './actions/types'\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport setAuthToken from './utils/setAuthToken'\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    // check for token in LS\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token)\r\n    }\r\n    // store.dispatch(loadUser());\r\n\r\n    // log user out from all tabs if they log out in one tab\r\n    window.addEventListener('storage', () => {\r\n      if (!localStorage.token) store.dispatch({ type: LOGOUT })\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/flip\" component={Flip} />\r\n            <Route exact path=\"/dice\" component={Dice} />\r\n            <Route component={NotFound} />\r\n            {/* <Route component={Routes} /> */}\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// import api from '../utils/api';\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGOUT\r\n} from './types';\r\n\r\n// Login User\r\nexport const login = (address) => async dispatch => {\r\n\tconsole.log(address);\r\n\tdispatch({\r\n\t\ttype: LOGIN_SUCCESS,\r\n\t\tpayload: address\r\n\t});\r\n};\r\n\r\n// Logout\r\nexport const logout = () => ({ type: LOGOUT });\r\n","// import api from '../utils/api';\r\nimport axios from 'axios'\r\n\r\n// Save winner's data\r\nexport const saveWinnerData =  (data) => async dispatch => {\r\n\tconsole.log(data);\r\n\tconst response = await axios.post('/api/game/saveWinnerData', data)\r\n\tconsole.log('response=> ', response.data)\r\n\tconst { top_winners, total_payout } = response.data\r\n\r\n\tdispatch({\r\n\t\ttype: 'SET_TOP_WINNERS',\r\n\t\tpayload: top_winners\r\n\t})\r\n\r\n\tdispatch({\r\n\t\ttype: 'SET_TOTAL_PAYOUT',\r\n\t\tpayload: total_payout\r\n\t})\r\n};\r\n\r\n// Get top winners\r\nexport const getTopWinners =  () => async dispatch => {\r\n\tconst response = await axios.post('/api/game/getTopWinners', {})\r\n\tconst {top_winners} = response.data\r\n\tconsole.log('topwinners=>', top_winners)\r\n\tdispatch({\r\n\t\ttype: 'SET_TOP_WINNERS',\r\n\t\tpayload: top_winners\r\n\t})\r\n};\r\n\r\n// Get total payout\r\nexport const getTotalPayout =  () => async dispatch => {\r\n\tconst response = await axios.post('/api/game/getTotalPayout', {})\r\n\tconst {total_payout} = response.data\r\n\tconsole.log('total_payout=>', response.data )\r\n\tdispatch({\r\n\t\ttype: 'SET_TOTAL_PAYOUT',\r\n\t\tpayload: total_payout\r\n\t})\r\n};"],"sourceRoot":""}